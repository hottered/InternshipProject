@using Contracts.Contract
@model DataLayer.Models.Pagination.PaginatedList<DataLayer.Models.Contract.UserContract>

@{
    ViewData["Title"] = "AllUserContracts";
    var filter = ViewData["CurrentFilter"] as UserContractFilter;

    var queryParams = string.Empty;
    if (filter != null)
    {
        var properties = filter.GetType().GetProperties();
        var queryList = new List<string>();

        foreach (var prop in properties)
        {
            var value = prop.GetValue(filter);
            if (value != null)
            {
                queryList.Add($"{prop.Name}={Uri.EscapeDataString(value.ToString())}");
            }
        }

        queryParams = string.Join("&", queryList);
    }
}
@section Scripts {
    <script src="~/js/searchButtonToggle.js"></script>
}
<h1>All Contracts</h1>

<div class="row">
    <div class="col-md-6">
        <form class="d-flex" asp-action="AllUserContracts" asp-controller="Contract">
            <input id="searchInput" name="searchString" class="form-control me-1" type="search" placeholder="Search" aria-label="Search" value="@filter?.SearchString">
            <button id="searchButton" class="btn btn-dark" type="submit" disabled>Search by name</button>
        </form>
    </div>
    <div class="col-md-6">
        <a asp-action="AllUserContracts" class="text-dark">Back to Full List</a>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Contract Number
            </th>
            <th>
                Employee
            </th>
            <th>
                Contract start date
            </th>
            <th>
                Contract start date
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modeitem=> item.ContractNumber)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Employee.FirstName) @Html.DisplayFor(modelItem => item.Employee.LastName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>

                <td>
                    @Html.ActionLink(
                             "",
                             "GetContractById",
                             new { id = item.Id },
                             new { @class = "fa fa-edit", title = "Edit" }) |
                    @Html.ActionLink(
                             "",
                             "Viewcontract",
                             new { id = item.Id },
                             new { @class = "fa fa-trash", title = "View" })
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    <a class="page-link @(Model.PageIndex == 1 ? "disabled" : "")" href="?pageNumber=1&@queryParams">&laquo;&laquo;</a>
    <a class="page-link @(Model.HasPreviousPage ? "" : "disabled")" href="?pageNumber=@(Model.PageIndex - 1)&@queryParams">&laquo;</a>

    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <a class="page-link @(Model.PageIndex == i ? "active" : "")" href="?pageNumber=@i&@queryParams">@i</a>
    }

    <a class="page-link @(Model.HasNextPage ? "" : "disabled")" href="?pageNumber=@(Model.PageIndex + 1)&@queryParams">&raquo;</a>
    <a class="page-link @(Model.PageIndex == Model.TotalPages ? "disabled" : "")" href="?pageNumber=@Model.TotalPages&@queryParams">&raquo;&raquo;</a>
</div>
