@model DataLayer.Models.Pagination.PaginatedList<DataLayer.Models.Employee>

@{
    ViewData["Title"] = "AllUsers";
}
@section Scripts {
    <script src="~/js/searchButtonToggle.js"></script>
}
<h1>AllUsers</h1>

<p>
    <a asp-controller="User" asp-action="CreateUser">Create New User</a>
</p>
<div class="row">
    <div class="col-md-6">
        <form class="d-flex" asp-action="AllUsers" asp-controller="User">
            <input id="searchInput" name="searchString" class="form-control me-1" type="search" placeholder="Search" aria-label="Search" value="@ViewData["CurrentFilter"]">
            <button id="searchButton" class="btn btn-dark" type="submit" disabled>Search by name</button>
        </form>
    </div>
    <div class="col-md-6">
        <a asp-action="AllUsers" class="text-dark">Back to Full List</a>
    </div>
</div>
@if (User.Identity.IsAuthenticated)
{
    <table class="table table-bordered">
        @foreach (var claim in User.Claims)
        {
            <tr>
                <td>
                    @claim.Type
                </td>
                <td>
                    @claim.Value
                </td>
            </tr>
        }
    </table>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].IDNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Email)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IDNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.ActionLink("Edit", "GetUserById", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "DeleteUser", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="col-md-6">
    <nav>
        <ul class="pagination justify-content-end">
            <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                <a class="page-link text-black" asp-route-pageNumber="1"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    <span>First</span>
                </a>
            </li>

            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    <span>Previous</span>
                </a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                    <a class="page-link text-black" asp-route-pageNumber="@i"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                </li>
            }

            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    <span>Next</span>
                </a>
            </li>
            <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                <a class="page-link text-black" asp-route-pageNumber="@Model.TotalPages"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    <span>Last</span>
                </a>
            </li>


        </ul>
    </nav>
</div>