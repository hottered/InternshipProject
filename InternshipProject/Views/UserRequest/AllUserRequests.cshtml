@model DataLayer.Models.Pagination.PaginatedList<Contracts.Request.UserRequestGetResponse>
@using Contracts.Request
@using SharedDll.Enums
@{
    ViewData["Title"] = "AllUserRequests";
    var filter = ViewData["CurrentFilter"] as UserRequestFilter;

    var queryParams = string.Empty;
    if (filter != null)
    {
        var properties = filter.GetType().GetProperties();
        var queryList = new List<string>();

        foreach (var prop in properties)
        {
            var value = prop.GetValue(filter);
            if (value != null)
            {
                queryList.Add($"{prop.Name}={Uri.EscapeDataString(value.ToString())}");
            }
        }

        queryParams = string.Join("&", queryList);
    }
}

@* @section Scripts {
    <script src="~/js/searchButtonToggle.js"></script>

} *@

<h1>AllUserRequests</h1>

<p>
    <a asp-controller="UserRequest" asp-action="CreateUserRequest">Create New</a>
</p>

<div>
    <form asp-action="AllUserRequests" asp-controller="UserRequest" method="get">

@*         <div class="search-section">
            <input id="searchInput" name="@nameof(UserRequestFilter.SearchString)" class="form-control me-1" type="search" placeholder="Search"
                   aria-label="Search" value="@filter?.SearchString">

            <button id="searchButton" class="btn btn-dark" type="submit">Search by name</button>

            <a asp-action="AllUserRequests" class="text-dark">Back to Full List</a>

        </div> *@

        <select name="LeaveType" class="dropdown-container">
            @{
                foreach (var option in Enum.GetValues(typeof(LeaveTypeEnum)))
                {
                    <option value="@option">@option</option>
                }
            }
        </select>

    </form>
</div>



<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Items[0].EmployeeFirstName)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].StartDate)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].EndDate)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].LeaveType)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.EmployeeFirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                <td>@Html.DisplayFor(modelItem => item.LeaveType)</td>
                <td>
                    @Html.ActionLink("Edit", "GetUserRequestById", new { id = item.UserId }) |
                    @Html.ActionLink("Approve", "ApproveUserRequest", new { id = item.UserId }) |
                    @Html.ActionLink("Reject", "DeleteUserRequest", new { id = item.UserId })
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    <a class="page-link @(Model.PageIndex == 1 ? "disabled" : "")" href="?pageNumber=1&@queryParams"><<</a>
    <a class="page-link @(Model.HasPreviousPage ? "" : "disabled")" href="?pageNumber=@(Model.PageIndex - 1)&@queryParams"><</a>

    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <a class="page-link @(Model.PageIndex == i ? "active" : "")" href="?pageNumber=@i&@queryParams">@i</a>
    }

    <a class="page-link @(Model.HasNextPage ? "" : "disabled")" href="?pageNumber=@(Model.PageIndex + 1)&@queryParams">></a>
    <a class="page-link @(Model.PageIndex == Model.TotalPages ? "disabled" : "")" href="?pageNumber=@Model.TotalPages&@queryParams">>></a>
</div>


<style>

    .search-section{
        display:flex;
        width:50%;
    }
    .text-dark {
        margin-left:10px
    }
    #searchButton{
        margin-left:10px;
    }

    body {
        font-family: Arial, sans-serif;
    }

    .table {
        width: 100%;
        margin-top: 20px;
        border: solid;
        text-align: center;
    }

        .table th, .table td {
            border: 1px solid #dddddd;
            padding: 8px;
            border-right: solid;
        }

        .table th {
            background-color: #f2f2f2;
        }

        .table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .table tr:hover {
            background-color: #f1f1f1;
        }

    .pagination {
        display: flex;
        justify-content: right;
        margin-top: 20px;
    }

        .pagination .page-link {
            color: black;
            padding: 8px 16px;
            text-decoration: none;
            border: 1px solid #dddddd;
            margin: 0 4px;
        }

            .pagination .page-link:hover {
                background-color: #ddd;
            }

            .pagination .page-link.active {
                background-color: lightskyblue;
                color: black;
                border: 1px solid lightskyblue;
            }

            .pagination .page-link.disabled {
                color: #cccccc;
                pointer-events: none;
            }

    .edit-action, .approve-action, .reject-action {
        margin-right: 8px;
        text-decoration: none;
        color: blue;
    }

        .edit-action:hover, .approve-action:hover, .reject-action:hover {
            text-decoration: underline;
        }

    .row {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .form-control {
        padding: 8px;
        font-size: 14px;
    }

    .btn {
        padding: 8px 16px;
        font-size: 14px;
        cursor: pointer;
    }

    .btn-dark {
        background-color: black;
        color: white;
        border: none;
    }

        .btn-dark:hover {
            background-color: #333;
        }

/*     .dropdown-container {
        margin-top: 20px;
        height: 40px;
        width: 100px;
        border: 2px solid black;
    } */

</style>