@model DataLayer.Models.Pagination.PaginatedList<DataLayer.Models.Request.UserRequest>
@using Contracts.Request
@{
    ViewData["Title"] = "AllUserRequests";
    var filter = ViewData["CurrentFilter"] as UserRequestFilter;

    var queryParams = string.Empty;
    if (filter != null)
    {
        var properties = filter.GetType().GetProperties();
        var queryList = new List<string>();

        foreach (var prop in properties)
        {
            var value = prop.GetValue(filter);
            if (value != null)
            {
                queryList.Add($"{prop.Name}={Uri.EscapeDataString(value.ToString())}");
            }
        }

        queryParams = string.Join("&", queryList);
    }
}

@section Scripts {
    <script src="~/js/searchButtonToggle.js"></script>
}

<h1>AllUserRequests</h1>

<p>
    <a asp-controller="UserRequest" asp-action="CreateUserRequest">Create New</a>
</p>

<div class="row">
    <div class="col-md-6">
        <form class="d-flex" asp-action="AllUserRequests" asp-controller="UserRequest" method="get">
            <input id="searchInput" name="SearchString" class="form-control me-1" type="search" placeholder="Search"
                   aria-label="Search" value="@filter?.SearchString">
            <button id="searchButton" class="btn btn-dark" type="submit" disabled>Search by name</button>
        </form>
    </div>
    <div class="col-md-6">
        <a asp-action="AllUserRequests" class="text-dark">Back to Full List</a>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Items[0].Id)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].StartDate)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].EndDate)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].LeaveType)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].CommentEmployee)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].CommentHR)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].EmployeeId)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].Approved)</th>
            <th>@Html.DisplayNameFor(model => model.Items[0].IsDeleted)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                <td>@Html.DisplayFor(modelItem => item.LeaveType)</td>
                <td>@Html.DisplayFor(modelItem => item.CommentEmployee)</td>
                <td>@Html.DisplayFor(modelItem => item.CommentHR)</td>
                <td>@Html.DisplayFor(modelItem => item.EmployeeId)</td>
                <td>@Html.DisplayFor(modelItem => item.Approved)</td>
                <td>@Html.DisplayFor(modelItem => item.IsDeleted)</td>
                <td>
                    @Html.ActionLink("Edit", "GetUserRequestById", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "DeleteUserRequest", new { id = item.Id }) |
                    @Html.ActionLink("Approve", "ApproveUserRequest", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="col-md-6">
    <nav>
        <ul class="pagination justify-content-end">
            <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                <a class="page-link text-black" href="?pageNumber=1&@queryParams">
                    <span>First</span>
                </a>
            </li>

            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link text-black" href="?pageNumber=@(Model.PageIndex - 1)&@queryParams">
                    <span>Previous</span>
                </a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                    <a class="page-link text-black" href="?pageNumber=@i&@queryParams">@i</a>
                </li>
            }

            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link text-black" href="?pageNumber=@(Model.PageIndex + 1)&@queryParams">
                    <span>Next</span>
                </a>
            </li>
            <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                <a class="page-link text-black" href="?pageNumber=@Model.TotalPages&@queryParams">
                    <span>Last</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
